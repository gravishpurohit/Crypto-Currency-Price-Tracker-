{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAyBeA,EAvBF,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,KAAKC,EAAqD,EAArDA,MAAMC,EAA+C,EAA/CA,OAAOC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,UACtD,OACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,WAAf,UACA,sBAAKA,UAAU,OAAf,UAEA,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,WAAb,SAAyBL,OAEzB,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OACA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OACJ,oBAAGJ,UAAU,iBAAb,uBAAyCD,EAAUI,6BC0CpDE,MAvDf,WAEE,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAEA,EAAyBF,mBAAS,IAAlC,mBAAMG,EAAN,KAAcC,EAAd,KACAC,qBAAU,WACRC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SACZC,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,QAC5B,IAEF,IAIMG,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OACrCA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAG1C,OACE,sBAAKxB,UAAU,WAAf,UACA,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,kCACA,gCACE,uBAAO0B,KAAK,OAAOC,YAAY,SAAS3B,UAAU,aAAa4B,SAbhD,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAgBjB,sBAAK/B,UAAU,MAAf,UACE,mBAAGA,UAAU,MAAb,kBACA,mBAAGA,UAAU,MAAb,oBACA,mBAAGA,UAAU,MAAb,mBACA,mBAAGA,UAAU,MAAb,oBACA,mBAAGA,UAAU,OAAb,0BACA,mBAAGA,UAAU,MAAb,2BAGHqB,EAAcW,KAAI,SAAAT,GACjB,OACE,cAAC,EAAD,CACA9B,KAAM8B,EAAK9B,KACXC,MAAO6B,EAAK7B,MACZC,OAAQ4B,EAAK5B,OACbI,UAAWwB,EAAKU,WAChBrC,MAAO2B,EAAKW,cACZpC,YAAayB,EAAKY,4BAClBtC,OAAQ0B,EAAKa,cAPFb,EAAKc,WCjCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.df02d41b.chunk.js","sourcesContent":["import React from 'react';\nimport './Coin.css';\nconst Coin = ({name,image,symbol,price,volume,priceChange,marketcap}) => {\n    return (\n        <div className=\"coin-con\">\n            <div className=\"coin-row\">\n            <div className=\"coin\">\n                \n            <img src={image} alt=\"crypto\"></img>\n            <h1>{name}</h1>\n            <p className=\"coin-sym\">{symbol}</p>\n            </div>\n            <div className=\"coin-data\">\n                <p className=\"coin-price\">${price}</p>\n                <p className=\"coin-volume\">${volume.toLocaleString()}</p>  \n                {priceChange < 0 ? (\n                    <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n                ): (<p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>)}\n                <p className=\"coin-marketcap\">Mkt Cap: ${marketcap.toLocaleString()}</p>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Coin\n","import React,{ useState, useEffect} from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Coin from './Coin';\n\nfunction App() {\n \n  const[coins,setCoins]=useState([]);\n\n  const[search, setSearch]=useState('')\n  useEffect(()=>{\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=500&page=1&sparkline=false')\n    .then(res => {\n      setCoins(res.data);\n    }).catch(error=>console.log(error));\n  },[]);\n\n  const handleChange = e =>{\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n    );\n\n  return (\n    <div className=\"coin-app\">\n    <div className=\"coin-search\">\n      <h1 className=\"coin-text\"> All Crypto-Currency</h1>\n      <forms>\n        <input type=\"text\" placeholder=\"search\" className=\"coin-input\" onChange={handleChange}/>\n      </forms>\n      \n      </div>\n      <div className=\"hea\">\n        <p className=\"nam\">Name</p>\n        <p className=\"sam\">Symbol</p>\n        <p className=\"pam\">Price</p>\n        <p className=\"vam\">Volume</p>\n        <p className=\"pamc\">Price Change</p>\n        <p className=\"mak\">Market Cap</p>\n      </div>\n\n    {filteredCoins.map(coin => {\n      return(\n        <Coin key={coin.id}\n        name={coin.name}\n        image={coin.image}\n        symbol={coin.symbol}\n        marketcap={coin.market_cap}\n        price={coin.current_price}\n        priceChange={coin.price_change_percentage_24h}\n        volume={coin.total_volume}\n        />\n      );\n    })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}